% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/discRD-local-lm.r
\name{local_lm}
\alias{local_lm}
\title{Local Linear Regression to Estimate Local ATE}
\usage{
local_lm(
  basemod,
  data,
  weights,
  subset,
  submod,
  order = c(1, 2),
  cutoff,
  assign,
  cholesky = TRUE,
  hc = "HC0",
  bw,
  kernel,
  point = 0
)
}
\arguments{
\item{basemod}{baseline formula. \verb{outcome ~ running variable}.}

\item{data}{data.frame which you want to use.}

\item{weights}{weight variable.}

\item{subset}{subset condition.}

\item{submod}{numeric vector.
Which baseline model you want to use.}

\item{order}{numeric vector of global polynomial orders.}

\item{cutoff}{numeric of cutoff points
If missing, try to find \code{getOption("discRD.cutoff")}.}

\item{assign}{assignment rule of treatment.
If "greater",
treated whose running variable is greater than or equal to cutoff.
If "smaller",
treated whose running variable is less than or equal to cutoff.
If missing, try to find \code{getOption("discRD.assign")}.}

\item{cholesky}{logical (default is TRUE).
When solving normal equation, use cholesky decomposition.}

\item{hc}{character.
Calculate robust variance-covariance matrix ("HC0" or "HC1")}

\item{bw}{bandwidth.}

\item{kernel}{character of kernel density ("uniform" or "triangular")}

\item{point}{value of the running variable that
the kernel weights weigh the most}
}
\description{
Estimate the local ATE
at the treatment assignment threshold
by the local linear regression.
}
\details{
\dots can pass lm_robust arguments
and some data formatting arguments.
There are three arguments for data formatting.
"x" is a string of running variables.
"cutoff" is the threshold of the running variable
in the treatment assignment.
"assign" is a rule for assigning treatments.
If \code{assign ="smaller"}, receive treatment
when the running variable is less than or equal to
the cutoff value.
If \code{assign ="greater"},
receive treatment when the running variable is
greater than or equal to the cutoff value.
When using "weight" to run weighted least squares,
specify a string of weight variable.
When you don't specify "se_type",
use "HC1" to calculate standard errors.
}
\examples{
running <- sample(1:100, size = 1000, replace = TRUE)
cov1 <- rnorm(1000, sd = 2); cov2 <- rnorm(1000, mean = -1)
y0 <- running + cov1 + cov2 + rnorm(1000, sd = 10)
y1 <- 2 + 1.5 * running + cov1 + cov2 + rnorm(1000, sd = 10)
y <- ifelse(running <= 50, y1, y0)
bin <- ifelse(y > mean(y), 1, 0)
w <- sample(c(1, 0.5), size = 1000, replace = TRUE)
raw <- data.frame(y, bin, running, cov1, cov2, w)

set_optDiscRD(
  y + bin ~ running,
  covmod = list(~cov1, ~ cov1 + cov2),
  discRD.cutoff = 50,
  discRD.assign = "smaller"
)

est <- local_lm(data = raw, bw = 3, kernel = "uniform")
str(local_lm(submod = 1, data = raw, bw = 3, kernel = "uniform"))
str(local_lm(submod = 1, order = 3, data = raw, bw = 3, kernel = "uniform"))
str(local_lm(data = raw, cutoff = 30, bw = 3, kernel = "uniform"))
est2 <- local_lm(
data = raw, hc = "HC1", weights = w, bw = 3, kernel = "uniform"
)

}
